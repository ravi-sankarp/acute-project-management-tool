# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     service: kafka
#   name: kafka-depl
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       service: kafka
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       labels:
#         network/kafka-network: "true"
#         service: kafka
#     spec:
#       enableServiceLinks: false
#       containers:
#         - name: kafka
#           imagePullPolicy: IfNotPresent
#           image: confluentinc/cp-kafka:7.0.1
#           ports:
#             - containerPort: 29092
#             - containerPort: 9092
#           env:
#             - name: CONFLUENT_SUPPORT_CUSTOMER_ID
#               value: "anonymous"
#             - name: KAFKA_ADVERTISED_LISTENERS
#               value: "INTERNAL://kafka:29092,LISTENER_EXTERNAL://kafka-srv:9092"
#             - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
#               value: "true"
#             - name: KAFKA_BROKER_ID
#               value: "1"
#             - name: KAFKA_DEFAULT_REPLICATION_FACTOR
#               value: "1"
#             - name: KAFKA_INTER_BROKER_LISTENER_NAME
#               value: "INTERNAL"
#             - name: KAFKA_LISTENERS
#               value: "INTERNAL://:29092,LISTENER_EXTERNAL://:9092"
#             - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
#               value: "INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT"
#             - name: KAFKA_NUM_PARTITIONS
#               value: "1"
#             - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
#               value: "2"
#             - name: KAFKA_LOG_CLEANUP_POLICY
#               value: "compact"
#             - name: KAFKA_ZOOKEEPER_CONNECT
#               value: "zookeeper-srv:2181"
#           resources: {}
#           volumeMounts:
#             - mountPath: /data/kafka
#               name: kafka-data
#       hostname: kafka
#       restartPolicy: Always
#       volumes:
#         - name: kafka-data
#           persistentVolumeClaim:
#             claimName: kafka-pvc1
